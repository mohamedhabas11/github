#### Contents of the preconfiguration file (for bionic)
### Localization
d-i debian-installer/language string en
d-i debian-installer/country string US
d-i debian-installer/locale string en_US.UTF-8
d-i keymap select ch
d-i localechooser/supported-locales en_US.UTF-8,de_CH.UTF-8

## only critical should be asked
d-i debconf/priority string critical

### Network configuration
d-i netcfg/do_not_use_netplan true
d-i netcfg/choose_interface select auto
# hostname
d-i netcfg/get_hostname string {{ item.name }}
d-i netcfg/get_domain string amana.vpn


### Static network configuration.
# disable auto config
d-i netcfg/disable_autoconfig boolean true
# settings
d-i netcfg/get_nameservers string 10.190.75.11 10.190.75.12
{% set ip_addr = lookup('dig', item.name ) -%}
{% set ip_octets = ip_addr.split('.') -%}
{% if ( ip_octets[1] == '200' or ip_octets[1] == '201' or ip_octets[1] == '202' ) -%}
{% set ip_gw = '10.' + ip_octets[1] + '.0.1' -%}
{% set ip_netmask = '255.255.0.0' -%}
{% elif ( ip_octets[0] == '192' and ip_octets[1] == '168' and ip_octets[2] == '88' )  -%}
{% set ip_gw = '192.168.88.1' -%}
{% set ip_netmask = '255.255.252.0' -%}
{% else %}
{% set ip_gw = '10.' + ip_octets[1] + '.' + ip_octets[2] + '.1' -%}
{% set ip_netmask = '255.255.255.0' -%}
{% endif %}
d-i netcfg/get_ipaddress string {{ ip_addr }}
d-i netcfg/get_netmask string {{ ip_netmask }}
d-i netcfg/get_gateway string {{ ip_gw }}
d-i netcfg/confirm_static boolean true


### Mirror settings
d-i mirror/protocol string http
d-i mirror/country string manual
d-i mirror/http/hostname string de.archive.ubuntu.com
d-i mirror/http/directory string /ubuntu
d-i mirror/suite string bionic
d-i mirror/http/proxy string


### Account setup
# no root
d-i passwd/root-login boolean false
# normal useer account
d-i passwd/user-fullname string Ansible Provisioning
d-i passwd/username string ansible
# Normal user's password, in clear text
{% set _passwd = lookup('pipe','pwgen 32 1') %}
# pwgen must be installed on local machine
# brew install pwgen
d-i passwd/user-password password {{ _passwd }}
d-i passwd/user-password-again password {{ _passwd }}
# allow weak password
d-i user-setup/allow-password-weak boolean true
d-i user-setup/encrypt-home boolean false
d-i passwd/user-uid string 1001

### Clock and time zone setup
d-i clock-setup/utc boolean true
d-i time/zone string Etc/UTC
d-i clock-setup/ntp boolean true


### Partitioning
d-i partman-auto/disk string /dev/{{ item['libvirt_disks'][0]['device'] }}
d-i partman-auto/method string regular
d-i partman-auto/choose_recipe select {{ item['libvirt_disks'][0]['partition_scheme']|default('atomic') }}
d-i partman-partitioning/confirm_write_new_label boolean true
d-i partman/choose_partition select finish
d-i partman/confirm boolean true
d-i partman/confirm_nooverwrite boolean true
d-i partman/mount_style select traditional
d-i grub-installer/only_debian boolean true
d-i grub-installer/with_other_os boolean true
d-i grub-installer/bootdev string /dev/{{ item['libvirt_disks'][0]['device'] }}
d-i grub-pc/install_devices string /dev/{{ item['libvirt_disks'][0]['device'] }}


### Package selection
#####################################################
# use this to list all task options !!!!!!!!!!!!!!!!!
# tasksel --list-tasks
tasksel/first multiselect openssh-server, server
d-i pkgsel/include string openssh-server net-tools ifupdown
d-i pkgsel/update-policy select unattended-upgrades
popularity-contest popularity-contest/participate boolean false


# fix some issues at the end
# - seding grub defaults (disable splash screnn wich kills vnc viewer)
# - install python2.7 wich is not standard anymore and link to /usr/bin/python
# - install ansibles pubkey
# - partition, format and mount additional disks 
# - allow ansible sudo su w/o password
d-i preseed/late_command string \
	in-target sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT.*/GRUB_CMDLINE_LINUX_DEFAULT=""/' /etc/default/grub; \
	in-target sed -i 's/GRUB_CMDLINE_LINUX.*/GRUB_CMDLINE_LINUX="{{ item.vi_grub_cmd_line|default('') }}"/' /etc/default/grub; \
	in-target sed -i 's/GRUB_HIDDEN_TIMEOUT_QUIET.*/GRUB_HIDDEN_TIMEOUT_QUIET=false/' /etc/default/grub; \
	in-target update-grub; \
	in-target apt install python -y; \
	mkdir -p /target/home/ansible/.ssh/; \
	echo "{{ lookup('pipe', pipe_commands + 'ansiblekey.sh ' + item.name + ' ' + global_ansible_env ) }}" > /target/home/ansible/.ssh/authorized_keys; \
	chmod 0700 /target/home/ansible/.ssh/; \
	chmod 0600 /target/home/ansible/.ssh/authorized_keys; \
	chown 1001:1001 /target/home/ansible/.ssh/; \
	chown 1001:1001 /target/home/ansible/.ssh/authorized_keys; \
{# ---- partition, format and mount additional disks ---- #}
{% for disk in item.libvirt_disks %}{% if disk.device is defined and disk.filesystem is defined and disk.mountpoint is defined and disk.id != '0' %}
	echo "/dev/{{ disk.device }}1 {{ disk.mountpoint }} {{ disk.filesystem }} defaults 0 0" >> /target/etc/fstab; \
	(echo 0; echo n; echo p; echo 1; echo; echo; echo w;)| fdisk /dev/{{ disk.device }} ; \
	mkfs.{{ disk.filesystem }} /dev/{{ disk.device }}1 ; \
{% endif %}{% endfor %}
{# ---- mount hostshares ---- #}
{% if item.libvirt_hostshares is defined and item.libvirt_hostshares[0] is defined %}{% for share in item.libvirt_hostshares %}
	echo "{{ share.label }} {{ share.mountpoint }}  9p  trans=virtio,version=9p2000.L  0 0" >> /target/etc/fstab; \
{% endfor %}{# ---- fix modules ---- #}
	echo "9p" >> /target/etc/initramfs-tools/modules; \
	echo "9pnet" >> /target/etc/initramfs-tools/modules; \
	echo "9pnet_virtio" >> /target/etc/initramfs-tools/modules; \
	in-target update-initramfs -u; \
{% endif %}
	echo 'ansible ALL=(ALL:ALL) NOPASSWD:ALL' >> /target/etc/sudoers;


# Uncomment for KVM only: Perform a poweroff instead of a reboot
#Â ?????? not shure if this is the way to go
# d-i debian-installer/exit/poweroff boolean true


### Misc options
# Disable that annoying WEP key dialog.
d-i netcfg/wireless_wep string
# Not allow non-free firmware
d-i hw-detect/load_firmware boolean false
# Avoid that last message about the install being complete.
d-i finish-install/reboot_in_progress note


# in-target chown 1001:1001 /home/ansible/.ssh/; \
# in-target chmod 0700 /home/ansible/.ssh/; \
# in-target chmod 0600 /home/ansible/.ssh/authorized_keys;	
# /dev/vg_thin/libvirtpool /srv/libvirt/pool ext4 defaults 0 0


